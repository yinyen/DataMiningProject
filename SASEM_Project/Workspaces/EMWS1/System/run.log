NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 22DEC2019:18:02:53 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16273      %let emexceptionString =;
16274      %let EMEXCEPTIONSTRING=;
16275      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16276      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16277      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16278      %let EM_ACTION = UPDATE;
16279      %let syscc = 0;
16280      /* Fimport.source */
16281      %macro main;
16282            %if %upcase(&EM_ACTION) = CREATE %then %do;
16283               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16284               %include temp;
16285               filename temp;
16286               %create;
16287            %end;
16288            %else
16289            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16290               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16291               %include temp;
16292               filename temp;
16293               %train;
16294            %end;
16295            %else
16296            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16297               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16298               %include temp;
16299               filename temp;
16300               %update;
16301            %end;
16302            %else
16303            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16304               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16305               %include temp;
16306               filename temp;
16307               %property;
16308            %end;
16309             %else
16310            %if %upcase(&EM_ACTION) = SCORE %then %do;
16311               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16312               %include temp;
16313               filename temp;
16314               %score;
16315            %end;
16316            %else
16317            %if %upcase(&EM_ACTION) = REPORT %then %do;
16318               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16319               %include temp;
16320               filename temp;
16321               %report;
16322            %end;
16323            %else
16324            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16325               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16326               %include temp;
16327               filename temp;
16328               %openvariableset;
16329            %end;
16330            %else
16331            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16332               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16333               %include temp;
16334               filename temp;
16335               %closevariableset;
16336            %end;
16337      %mend main;
16338      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16339     +%macro update;
16340     +    %let oldrole = %str();
16341     +    data _null_;
16342     +       set &em_data_exportset;
16343     +       where NODEPORT='TRAIN';
16344     +       call symput('oldrole', ROLE);
16345     +    run;
16346     +    %if &oldrole ne &em_property_role %then %do;
16347     +        data &em_data_exportset;
16348     +           set &em_data_exportset;
16349     +           if NODEPORT='TRAIN' then do;
16350     +              ROLE="&em_property_role";
16351     +              NEEDUPDATE='Y';
16352     +              EXPORT='Y';
16353     +           end;
16354     +        run;
16355     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16356     +        data _null_;
16357     +           file x;
16358     +           put ' ';
16359     +        run;
16360     +        filename x;
16361     +    %end;
16362     +    %else %do;
16363     +        data &em_data_exportset;
16364     +           set &em_data_exportset;
16365     +           if NODEPORT='TRAIN' then do;
16366     +              ROLE="&em_property_role";
16367     +              NEEDUPDATE='Y';
16368     +              EXPORT='Y';
16369     +           end;
16370     +        run;
16371     +    %end;
16372     +
16373     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16374     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16375     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16376     +           set &em_user_emcmetadefault;
16377     +           drop DROP;
16378     +           where DROP='N';
16379     +        run;
16380     +    %end;
16381     +
16382     +%mend update;
16383     +
16384     +
16385     +
16386     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16387      *------------------------------------------------------------*;
16388      * End UPDATE: FIMPORT;
16389      *------------------------------------------------------------*;

16390      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16392      %let _HPDMGRIDHOST=;
16393      %let _HPDMGRIDINSTALLLOC=;
16394      %let _HPDMGRIDDATASERVER=;
16395      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 22DEC2019:18:02:53 
* 
*------------------------------------------------------------* 
16396      %let _emdsep = \;
16397      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16398      %let em_filemodtime=;
16399      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16400      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16401      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16402      where fileref eq "#LN00112";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00112";
16403      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16404      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00112';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16405      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16406      %let em_Train = N;
16407      %let em_Score = N;
16408      %let em_Report = N;
16409      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16410      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16411      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16412      put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
16413      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16414      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "FIMPORT" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "GRFEXPL" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "DROP" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
16416      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16417      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16418      put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
16419      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16420      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 22DEC2019:18:02:55 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16439      %let _HPDMGRIDHOST=;
16440      %let _HPDMGRIDINSTALLLOC=;
16441      %let _HPDMGRIDDATASERVER=;
16442      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 22DEC2019:18:02:56 
* 
*------------------------------------------------------------* 
16443      %let _emdsep = \;
16444      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16445      %let em_Train = N;
16446      %let em_Score = N;
16447      %let em_Report = N;
16448      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16449      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16450      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16451      put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
16452      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16453      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16454      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "Part" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "DROP" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
16455      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16456      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16457      put '<Node Id="GrfExpl" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="GrfExpl" Event="Update" Pid="" Gridid=""/>';
16458      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16459      %let emloopmode =;
*------------------------------------------------------------* 
* 
* GrfExpl : Beginning update before running 
* datetime : 22DEC2019:18:02:58 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.GrfExpl_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16675      %let emexceptionString =;
16676      %let EMEXCEPTIONSTRING=;
16677      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16678      * UPDATE: GrfExpl;
MPRINT(EM_DIAGRAM):   * UPDATE: GrfExpl;
16679      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16680      %let EM_ACTION = UPDATE;
16681      %let syscc = 0;
16682      %macro main;
16683         filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
16684         %include temp;
16685         filename temp;
16686      
16687         %SetProperties;
16688      
16689         %if %upcase(&EM_ACTION) = CREATE %then %do;
16690      
16691             filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
16692             %include temp;
16693             filename temp;
16694             %create;
16695         %end;
16696         %else
16697         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16698      
16699             filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
16700             %include temp;
16701             filename temp;
16702             %train;
16703      
16704         %end;
16705         %else
16706         %if %upcase(&EM_ACTION) = REPORT %then %do;
16707      
16708             filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
16709             %include temp;
16710             filename temp;
16711      
16712             %report;
16713         %end;
16714      
16715      %mend main;
16716      
16717      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
16718     +%macro SetProperties;
16719     +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
16720     +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
16721     +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
16722     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
16723     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
16724     +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
16725     +
16726     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: GrfExpl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16727      *------------------------------------------------------------*;
16728      * End UPDATE: GrfExpl;
16729      *------------------------------------------------------------*;
16730      

16731      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\GrfExpl\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16733      %let _HPDMGRIDHOST=;
16734      %let _HPDMGRIDINSTALLLOC=;
16735      %let _HPDMGRIDDATASERVER=;
16736      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* GrfExpl : End update 
* datetime : 22DEC2019:18:02:58 
* 
*------------------------------------------------------------* 
16737      %let _emdsep = \;
16738      %em_getactionstatus(emlib =EMWS1, nodeid=GrfExpl);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16739      %let em_filemodtime=;
16740      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16741      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16742      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16743      where fileref eq "#LN00166";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00166";
16744      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16745      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00166';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16746      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16747      %let em_Train = N;
16748      %let em_Score = N;
16749      %let em_Report = N;
16750      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16751      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16752      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16753      put '<Node Id="GrfExpl" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="GrfExpl" Event="Complete" Pid="" Gridid=""/>';
16754      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.86 seconds
      cpu time            0.00 seconds
      

16755      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16756      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "GrfExpl" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "DROP" 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
16757      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16758      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16759      put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
16760      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16761      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 22DEC2019:18:03:00 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.GrfExpl_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16781      %let _HPDMGRIDHOST=;
16782      %let _HPDMGRIDINSTALLLOC=;
16783      %let _HPDMGRIDDATASERVER=;
16784      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 22DEC2019:18:03:01 
* 
*------------------------------------------------------------* 
16785      %let _emdsep = \;
16786      %em_getactionstatus(emlib =EMWS1, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16787      %let em_Train = N;
16788      %let em_Score = N;
16789      %let em_Report = N;
16790      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16791      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16792      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16793      put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
16794      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16795      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16796      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "Impt" is up to date and doesn't need to run. 
Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
traverser_readyNode_note 
16797      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16798      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16799      put '<Node Id="Drop" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Drop" Event="Update" Pid="" Gridid=""/>';
16800      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16801      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Drop : Beginning update before running 
* datetime : 22DEC2019:18:03:03 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Drop_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\Drop\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16824      %let _HPDMGRIDHOST=;
16825      %let _HPDMGRIDINSTALLLOC=;
16826      %let _HPDMGRIDDATASERVER=;
16827      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Drop : End update 
* datetime : 22DEC2019:18:03:03 
* 
*------------------------------------------------------------* 
16828      %let _emdsep = \;
16829      %em_getactionstatus(emlib =EMWS1, nodeid=Drop);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16830      %let em_Train = N;
16831      %let em_Score = N;
16832      %let em_Report = N;
16833      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16834      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16835      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16836      put '<Node Id="Drop" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Drop" Event="Complete" Pid="" Gridid=""/>';
16837      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16838      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16839      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16840      put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
16841      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

16842      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 22DEC2019:18:03:05 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.audience_score_positive(label="audience_score_positive");
MPRINT(EM_DECDATA):   length audience_score_positive $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "TRUE" DECISION2= "FALSE" ;
MPRINT(EM_DECDATA):   audience_score_positive="TRUE";
MPRINT(EM_DECDATA):   COUNT=1159;
MPRINT(EM_DECDATA):   DATAPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   audience_score_positive="FALSE";
MPRINT(EM_DECDATA):   COUNT=1279;
MPRINT(EM_DECDATA):   DATAPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DECDATA):   label DECISION1= 'TRUE';
MPRINT(EM_DECDATA):   label DECISION2= 'FALSE';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17252      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17253      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17254      TARGET="audience_score_positive";
MPRINT(EM_DIAGRAM):   TARGET="audience_score_positive";
17255      DECDATA="EMWS1.Tree_audience_score_p_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_audience_score_p_DD";
17256      DECMETA="EMWS1.Tree_audience_score_p_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_audience_score_p_DM";
17257      output;
MPRINT(EM_DIAGRAM):   output;
17258      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

17259      %let emexceptionString =;
17260      %let EMEXCEPTIONSTRING=;
17261      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17262      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
17263      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17264      %let EM_ACTION = UPDATE;
17265      %let syscc = 0;
17266      %macro main;
17267      
17268        %if %upcase(&EM_ACTION) = CREATE %then %do;
17269          filename temp catalog 'sashelp.emmodl.tree_create.source';
17270          %include temp;
17271          filename temp;
17272      
17273          %em_tree_create;
17274        %end;
17275      
17276         %else
17277         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17278      
17279             filename temp catalog 'sashelp.emmodl.tree_train.source';
17280             %include temp;
17281             filename temp;
17282             %em_tree_train;
17283         %end;
17284      
17285        %else
17286        %if %upcase(&EM_ACTION) = SCORE %then %do;
17287          filename temp catalog 'sashelp.emmodl.tree_score.source';
17288          %include temp;
17289          filename temp;
17290      
17291          %em_tree_score;
17292      
17293        %end;
17294      
17295        %else
17296        %if %upcase(&EM_ACTION) = REPORT %then %do;
17297      
17298             filename temp catalog 'sashelp.emmodl.tree_report.source';
17299             %include temp;
17300             filename temp;
17301      
17302             %em_tree_report;
17303         %end;
17304      
17305        %else
17306        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17307      
17308             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17309             %include temp;
17310             filename temp;
17311             %EM_TREE_OPENTREEVIEWER;
17312      
17313         %end;
17314      
17315        %else
17316        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17317      
17318             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17319             %include temp;
17320             filename temp;
17321             %EM_TREE_CLOSETREEVIEWER;
17322      
17323         %end;
17324      
17325      
17326         %doendm:
17327      %mend main;
17328      
17329      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17330      
17331      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17332      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
17333      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17334      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17336      %let _HPDMGRIDHOST=;
17337      %let _HPDMGRIDINSTALLLOC=;
17338      %let _HPDMGRIDDATASERVER=;
17339      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 22DEC2019:18:03:05 
* 
*------------------------------------------------------------* 
17340      %let _emdsep = \;
17341      %em_getactionstatus(emlib =EMWS1, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17342      %let em_filemodtime=;
17343      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17344      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17345      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17346      where fileref eq "#LN00236";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00236";
17347      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17348      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00236';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

17349      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17350      %let em_Train = N;
17351      %let em_Score = N;
17352      %let em_Report = N;
17353      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17354      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17355      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17356      put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
17357      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

17358      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17359      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "Drop" is up to date and doesn't need to run. 
Node "Tree" is up to date and doesn't need to run. 
Traverser: WaitingNode "MDLCOMP3" 
traverser_readyNode_note 
17360      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17361      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17362      put '<Node Id="Reg2" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Update" Pid="" Gridid=""/>';
17363      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

17364      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg2 : Beginning update before running 
* datetime : 22DEC2019:18:03:08 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Drop_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\Reg2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17384      %let _HPDMGRIDHOST=;
17385      %let _HPDMGRIDINSTALLLOC=;
17386      %let _HPDMGRIDDATASERVER=;
17387      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg2 : End update 
* datetime : 22DEC2019:18:03:08 
* 
*------------------------------------------------------------* 
17388      %let _emdsep = \;
17389      %em_getactionstatus(emlib =EMWS1, nodeid=Reg2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17390      %let em_Train = N;
17391      %let em_Score = N;
17392      %let em_Report = N;
17393      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17394      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17395      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17396      put '<Node Id="Reg2" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Complete" Pid="" Gridid=""/>';
17397      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

17398      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17399      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Reg2" is up to date and doesn't need to run. 
traverser_readyNode_note 
17400      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17401      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17402      put '<Node Id="MdlComp3" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp3" Event="Update" Pid="" Gridid=""/>';
17403      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.87 seconds
      cpu time            0.00 seconds
      

17404      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp3 : Beginning update before running 
* datetime : 22DEC2019:18:03:10 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_exportSet EMWS1.Reg2_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("TREE_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base3RHQI0T as select * from WORK.M2JEKW51 order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp3RHQI0T as select * from WORK.M2__ZLUA order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base3RHQI0T compare=work._comp3RHQI0T out=WORK._DIFF2NN9C5V noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\yinyen\Desktop\DataMiningProject3\SASEM_Project\Workspaces\EMWS1\MdlComp3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17445      %let _HPDMGRIDHOST=;
17446      %let _HPDMGRIDINSTALLLOC=;
17447      %let _HPDMGRIDDATASERVER=;
17448      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp3 : End update 
* datetime : 22DEC2019:18:03:11 
* 
*------------------------------------------------------------* 
17449      %let _emdsep = \;
17450      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17451      %let em_Train = N;
17452      %let em_Score = N;
17453      %let em_Report = N;
17454      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17455      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17456      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17457      put '<Node Id="MdlComp3" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp3" Event="Complete" Pid="" Gridid=""/>';
17458      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=64040,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           1.10 seconds
      cpu time            0.01 seconds
      

17459      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17460      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "MdlComp3" is up to date and doesn't need to run. 
Traverser: Run Completed 
17461      proc printto;
MPRINT(EM_DIAGRAM):    proc printto;
17462      run;
MPRINT(EM_DIAGRAM):   run;

