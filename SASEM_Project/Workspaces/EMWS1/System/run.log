NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16067      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16068      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16069      put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Update" Pid="" Gridid=""/>';
16070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16071      %let emloopmode =;
*------------------------------------------------------------* 
* 
* FIMPORT : Beginning update before running 
* datetime : 17NOV2019:22:49:18 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * FIMPORT: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16273      %let emexceptionString =;
16274      %let EMEXCEPTIONSTRING=;
16275      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16276      * UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   * UPDATE: FIMPORT;
16277      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16278      %let EM_ACTION = UPDATE;
16279      %let syscc = 0;
16280      /* Fimport.source */
16281      %macro main;
16282            %if %upcase(&EM_ACTION) = CREATE %then %do;
16283               filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16284               %include temp;
16285               filename temp;
16286               %create;
16287            %end;
16288            %else
16289            %if %upcase(&EM_ACTION) = TRAIN %then %do;
16290               filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16291               %include temp;
16292               filename temp;
16293               %train;
16294            %end;
16295            %else
16296            %if %upcase(&EM_ACTION) = UPDATE %then %do;
16297               filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16298               %include temp;
16299               filename temp;
16300               %update;
16301            %end;
16302            %else
16303            %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16304               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16305               %include temp;
16306               filename temp;
16307               %property;
16308            %end;
16309             %else
16310            %if %upcase(&EM_ACTION) = SCORE %then %do;
16311               filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16312               %include temp;
16313               filename temp;
16314               %score;
16315            %end;
16316            %else
16317            %if %upcase(&EM_ACTION) = REPORT %then %do;
16318               filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16319               %include temp;
16320               filename temp;
16321               %report;
16322            %end;
16323            %else
16324            %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16325               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16326               %include temp;
16327               filename temp;
16328               %openvariableset;
16329            %end;
16330            %else
16331            %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16332               filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16333               %include temp;
16334               filename temp;
16335               %closevariableset;
16336            %end;
16337      %mend main;
16338      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emsamp.Fimport_update.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_UPDATE.SOURCE.
16339     +%macro update;
16340     +    %let oldrole = %str();
16341     +    data _null_;
16342     +       set &em_data_exportset;
16343     +       where NODEPORT='TRAIN';
16344     +       call symput('oldrole', ROLE);
16345     +    run;
16346     +    %if &oldrole ne &em_property_role %then %do;
16347     +        data &em_data_exportset;
16348     +           set &em_data_exportset;
16349     +           if NODEPORT='TRAIN' then do;
16350     +              ROLE="&em_property_role";
16351     +              NEEDUPDATE='Y';
16352     +              EXPORT='Y';
16353     +           end;
16354     +        run;
16355     +        filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16356     +        data _null_;
16357     +           file x;
16358     +           put ' ';
16359     +        run;
16360     +        filename x;
16361     +    %end;
16362     +    %else %do;
16363     +        data &em_data_exportset;
16364     +           set &em_data_exportset;
16365     +           if NODEPORT='TRAIN' then do;
16366     +              ROLE="&em_property_role";
16367     +              NEEDUPDATE='Y';
16368     +              EXPORT='Y';
16369     +           end;
16370     +        run;
16371     +    %end;
16372     +
16373     +    %em_getname(key=EMCMETADEFAULT, type=DATA);
16374     +    %if %sysfunc(exist(&em_user_emcmetadefault)) and ^%sysfunc(exist(&em_lib..&em_nodeid._CMETA_TRAIN)) %then %do;
16375     +        data &em_lib..&em_nodeid._CMETA_TRAIN;
16376     +           set &em_user_emcmetadefault;
16377     +           drop DROP;
16378     +           where DROP='N';
16379     +        run;
16380     +    %end;
16381     +
16382     +%mend update;
16383     +
16384     +
16385     +
16386     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(UPDATE):   data _null_;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   where NODEPORT='TRAIN';
MPRINT(UPDATE):   call symput('oldrole', ROLE);
MPRINT(UPDATE):   run;

NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
      WHERE NODEPORT='TRAIN';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(UPDATE):   data EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   set EMWS1.FIMPORT_ExportSet;
MPRINT(UPDATE):   if NODEPORT='TRAIN' then do;
MPRINT(UPDATE):   ROLE="TRAIN";
MPRINT(UPDATE):   NEEDUPDATE='Y';
MPRINT(UPDATE):   EXPORT='Y';
MPRINT(UPDATE):   end;
MPRINT(UPDATE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(UPDATE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16387      *------------------------------------------------------------*;
16388      * End UPDATE: FIMPORT;
16389      *------------------------------------------------------------*;

16390      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\FIMPORT\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16392      %let _HPDMGRIDHOST=;
16393      %let _HPDMGRIDINSTALLLOC=;
16394      %let _HPDMGRIDDATASERVER=;
16395      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* FIMPORT : End update 
* datetime : 17NOV2019:22:49:18 
* 
*------------------------------------------------------------* 
16396      %let _emdsep = \;
16397      %em_getactionstatus(emlib =EMWS1, nodeid=FIMPORT);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16398      %let em_filemodtime=;
16399      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16400      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16401      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16402      where fileref eq "#LN00112";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00112";
16403      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16404      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00112';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16405      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16406      %let em_Train = N;
16407      %let em_Score = N;
16408      %let em_Report = N;
16409      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16410      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16411      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16412      put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="FIMPORT" Event="Complete" Pid="" Gridid=""/>';
16413      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

16414      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16415      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "FIMPORT" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "GRFEXPL" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16416      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16417      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16418      put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
16419      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16420      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 17NOV2019:22:49:20 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16439      %let _HPDMGRIDHOST=;
16440      %let _HPDMGRIDINSTALLLOC=;
16441      %let _HPDMGRIDDATASERVER=;
16442      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 17NOV2019:22:49:20 
* 
*------------------------------------------------------------* 
16443      %let _emdsep = \;
16444      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16445      %let em_Train = N;
16446      %let em_Score = N;
16447      %let em_Report = N;
16448      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16449      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16450      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16451      put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
16452      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

16453      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16454      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Part" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16455      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16456      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16457      put '<Node Id="GrfExpl" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="GrfExpl" Event="Update" Pid="" Gridid=""/>';
16458      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

16459      %let emloopmode =;
*------------------------------------------------------------* 
* 
* GrfExpl : Beginning update before running 
* datetime : 17NOV2019:22:49:23 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.GrfExpl_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16675      %let emexceptionString =;
16676      %let EMEXCEPTIONSTRING=;
16677      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16678      * UPDATE: GrfExpl;
MPRINT(EM_DIAGRAM):   * UPDATE: GrfExpl;
16679      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16680      %let EM_ACTION = UPDATE;
16681      %let syscc = 0;
16682      %macro main;
16683         filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
16684         %include temp;
16685         filename temp;
16686      
16687         %SetProperties;
16688      
16689         %if %upcase(&EM_ACTION) = CREATE %then %do;
16690      
16691             filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
16692             %include temp;
16693             filename temp;
16694             %create;
16695         %end;
16696         %else
16697         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16698      
16699             filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
16700             %include temp;
16701             filename temp;
16702             %train;
16703      
16704         %end;
16705         %else
16706         %if %upcase(&EM_ACTION) = REPORT %then %do;
16707      
16708             filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
16709             %include temp;
16710             filename temp;
16711      
16712             %report;
16713         %end;
16714      
16715      %mend main;
16716      
16717      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
16718     +%macro SetProperties;
16719     +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
16720     +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
16721     +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
16722     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
16723     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
16724     +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
16725     +
16726     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: GrfExpl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16727      *------------------------------------------------------------*;
16728      * End UPDATE: GrfExpl;
16729      *------------------------------------------------------------*;
16730      

16731      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\GrfExpl\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16733      %let _HPDMGRIDHOST=;
16734      %let _HPDMGRIDINSTALLLOC=;
16735      %let _HPDMGRIDDATASERVER=;
16736      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* GrfExpl : End update 
* datetime : 17NOV2019:22:49:23 
* 
*------------------------------------------------------------* 
16737      %let _emdsep = \;
16738      %em_getactionstatus(emlib =EMWS1, nodeid=GrfExpl);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16739      %let em_filemodtime=;
16740      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16741      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
16742      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
16743      where fileref eq "#LN00166";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00166";
16744      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
16745      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00166';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16746      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
16747      %let em_Train = N;
16748      %let em_Score = N;
16749      %let em_Report = N;
16750      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

16751      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16752      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16753      put '<Node Id="GrfExpl" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="GrfExpl" Event="Complete" Pid="" Gridid=""/>';
16754      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.01 seconds
      

16755      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16756      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "GrfExpl" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16757      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16758      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16759      put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Update" Pid="" Gridid=""/>';
16760      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

16761      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Impt : Beginning update before running 
* datetime : 17NOV2019:22:49:25 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Impt_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.GrfExpl_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Impt\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16781      %let _HPDMGRIDHOST=;
16782      %let _HPDMGRIDINSTALLLOC=;
16783      %let _HPDMGRIDDATASERVER=;
16784      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Impt : End update 
* datetime : 17NOV2019:22:49:25 
* 
*------------------------------------------------------------* 
16785      %let _emdsep = \;
16786      %em_getactionstatus(emlib =EMWS1, nodeid=Impt);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16787      %let em_Train = N;
16788      %let em_Score = N;
16789      %let em_Report = N;
16790      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16791      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16792      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16793      put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Impt" Event="Complete" Pid="" Gridid=""/>';
16794      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

16795      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16796      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Impt" is up to date and doesn't need to run. 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
traverser_readyNode_note 
16797      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16798      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16799      put '<Node Id="Tree3" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Update" Pid="" Gridid=""/>';
16800      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

16801      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree3 : Beginning update before running 
* datetime : 17NOV2019:22:49:28 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.audience_score_positive(label="audience_score_positive");
MPRINT(EM_DECDATA):   length audience_score_positive $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "TRUE" DECISION2= "FALSE" ;
MPRINT(EM_DECDATA):   audience_score_positive="TRUE";
MPRINT(EM_DECDATA):   COUNT=1159;
MPRINT(EM_DECDATA):   DATAPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   audience_score_positive="FALSE";
MPRINT(EM_DECDATA):   COUNT=1279;
MPRINT(EM_DECDATA):   DATAPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DECDATA):   label DECISION1= 'TRUE';
MPRINT(EM_DECDATA):   label DECISION2= 'FALSE';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17200      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17201      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17202      TARGET="audience_score_positive";
MPRINT(EM_DIAGRAM):   TARGET="audience_score_positive";
17203      DECDATA="EMWS1.Tree3_audience_score_p_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree3_audience_score_p_DD";
17204      DECMETA="EMWS1.Tree3_audience_score_p_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree3_audience_score_p_DM";
17205      output;
MPRINT(EM_DIAGRAM):   output;
17206      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

17207      %let emexceptionString =;
17208      %let EMEXCEPTIONSTRING=;
17209      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17210      * UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree3;
17211      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17212      %let EM_ACTION = UPDATE;
17213      %let syscc = 0;
17214      %macro main;
17215      
17216        %if %upcase(&EM_ACTION) = CREATE %then %do;
17217          filename temp catalog 'sashelp.emmodl.tree_create.source';
17218          %include temp;
17219          filename temp;
17220      
17221          %em_tree_create;
17222        %end;
17223      
17224         %else
17225         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17226      
17227             filename temp catalog 'sashelp.emmodl.tree_train.source';
17228             %include temp;
17229             filename temp;
17230             %em_tree_train;
17231         %end;
17232      
17233        %else
17234        %if %upcase(&EM_ACTION) = SCORE %then %do;
17235          filename temp catalog 'sashelp.emmodl.tree_score.source';
17236          %include temp;
17237          filename temp;
17238      
17239          %em_tree_score;
17240      
17241        %end;
17242      
17243        %else
17244        %if %upcase(&EM_ACTION) = REPORT %then %do;
17245      
17246             filename temp catalog 'sashelp.emmodl.tree_report.source';
17247             %include temp;
17248             filename temp;
17249      
17250             %em_tree_report;
17251         %end;
17252      
17253        %else
17254        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17255      
17256             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17257             %include temp;
17258             filename temp;
17259             %EM_TREE_OPENTREEVIEWER;
17260      
17261         %end;
17262      
17263        %else
17264        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17265      
17266             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17267             %include temp;
17268             filename temp;
17269             %EM_TREE_CLOSETREEVIEWER;
17270      
17271         %end;
17272      
17273      
17274         %doendm:
17275      %mend main;
17276      
17277      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17278      
17279      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17280      * End UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree3;
17281      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17282      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Tree3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17284      %let _HPDMGRIDHOST=;
17285      %let _HPDMGRIDINSTALLLOC=;
17286      %let _HPDMGRIDDATASERVER=;
17287      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree3 : End update 
* datetime : 17NOV2019:22:49:29 
* 
*------------------------------------------------------------* 
17288      %let _emdsep = \;
17289      %em_getactionstatus(emlib =EMWS1, nodeid=Tree3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17290      %let em_filemodtime=;
17291      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17292      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17293      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17294      where fileref eq "#LN00220";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00220";
17295      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17296      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00220';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17297      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17298      %let em_Train = N;
17299      %let em_Score = N;
17300      %let em_Report = N;
17301      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17302      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17303      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17304      put '<Node Id="Tree3" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Complete" Pid="" Gridid=""/>';
17305      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

17306      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17307      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17308      put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
17309      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

17310      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 17NOV2019:22:49:30 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.audience_score_positive;
MPRINT(EM_DECDATA):   length audience_score_positive $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "TRUE" DECISION2= "FALSE" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   audience_score_positive="TRUE";
MPRINT(EM_DECDATA):   COUNT=1159;
MPRINT(EM_DECDATA):   DATAPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.47538966365873;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   audience_score_positive="FALSE";
MPRINT(EM_DECDATA):   COUNT=1279;
MPRINT(EM_DECDATA):   DATAPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.52461033634126;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DECDATA):   label DECISION1= 'TRUE';
MPRINT(EM_DECDATA):   label DECISION2= 'FALSE';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify audience_score_positive(type=PROFIT label= audience_score_positive);
MPRINT(EM_DIAGRAM):   label DECISION1= "TRUE";
MPRINT(EM_DIAGRAM):   label DECISION2= "FALSE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17727      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17728      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17729      TARGET="audience_score_positive";
MPRINT(EM_DIAGRAM):   TARGET="audience_score_positive";
17730      DECDATA="EMWS1.Tree_audience_score_p_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Tree_audience_score_p_DD";
17731      DECMETA="EMWS1.Tree_audience_score_p_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Tree_audience_score_p_DM";
17732      output;
MPRINT(EM_DIAGRAM):   output;
17733      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

17734      %let emexceptionString =;
17735      %let EMEXCEPTIONSTRING=;
17736      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17737      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
17738      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17739      %let EM_ACTION = UPDATE;
17740      %let syscc = 0;
17741      %macro main;
17742      
17743        %if %upcase(&EM_ACTION) = CREATE %then %do;
17744          filename temp catalog 'sashelp.emmodl.tree_create.source';
17745          %include temp;
17746          filename temp;
17747      
17748          %em_tree_create;
17749        %end;
17750      
17751         %else
17752         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17753      
17754             filename temp catalog 'sashelp.emmodl.tree_train.source';
17755             %include temp;
17756             filename temp;
17757             %em_tree_train;
17758         %end;
17759      
17760        %else
17761        %if %upcase(&EM_ACTION) = SCORE %then %do;
17762          filename temp catalog 'sashelp.emmodl.tree_score.source';
17763          %include temp;
17764          filename temp;
17765      
17766          %em_tree_score;
17767      
17768        %end;
17769      
17770        %else
17771        %if %upcase(&EM_ACTION) = REPORT %then %do;
17772      
17773             filename temp catalog 'sashelp.emmodl.tree_report.source';
17774             %include temp;
17775             filename temp;
17776      
17777             %em_tree_report;
17778         %end;
17779      
17780        %else
17781        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17782      
17783             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17784             %include temp;
17785             filename temp;
17786             %EM_TREE_OPENTREEVIEWER;
17787      
17788         %end;
17789      
17790        %else
17791        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17792      
17793             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17794             %include temp;
17795             filename temp;
17796             %EM_TREE_CLOSETREEVIEWER;
17797      
17798         %end;
17799      
17800      
17801         %doendm:
17802      %mend main;
17803      
17804      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17805      
17806      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17807      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
17808      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17809      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17811      %let _HPDMGRIDHOST=;
17812      %let _HPDMGRIDINSTALLLOC=;
17813      %let _HPDMGRIDDATASERVER=;
17814      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 17NOV2019:22:49:31 
* 
*------------------------------------------------------------* 
17815      %let _emdsep = \;
17816      %em_getactionstatus(emlib =EMWS1, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17817      %let em_filemodtime=;
17818      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17819      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17820      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17821      where fileref eq "#LN00240";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00240";
17822      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17823      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00240';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17824      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17825      %let em_Train = N;
17826      %let em_Score = N;
17827      %let em_Report = N;
17828      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17829      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17830      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17831      put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
17832      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.01 seconds
      

17833      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17834      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Node "Tree3" is up to date and doesn't need to run. 
Node "Tree" is up to date and doesn't need to run. 
traverser_readyNode_note 
17835      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17836      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17837      put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
17838      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.01 seconds
      

17839      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp : Beginning update before running 
* datetime : 17NOV2019:22:49:34 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree3_exportSet EMWS1.Tree_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("TREE3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_RANK") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_SCOREDIST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_REPORTFIT") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base1Q1UTYY as select * from WORK.M2PIXFRL order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp1Q1UTYY as select * from WORK.M0N75ENZ order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base1Q1UTYY compare=work._comp1Q1UTYY out=WORK._DIFF24A6W2Q noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create table WORK._TMP10Z6DVFQ as select * from WORK._DIFF24A6W2Q where PORT in (select PORT from WORK._DIFF24A6W2Q where _type_ = "DIF") order by PORT, _type_;
MPRINT(EM_DIAGRAM):   proc sql;
MPRINT(EM_DIAGRAM):   create table WORK.DELTAELEM257IC67 as select * from WORK._DIFF24A6W2Q where _type_ = "COMPARE" and PORT not in (select PORT from WORK._DIFF24A6W2Q where _type_ = "DIF");
MPRINT(EM_DIAGRAM):   create table WORK.DELTDELEM257IC67 as select * from WORK._DIFF24A6W2Q where _type_ = "BASE" and PORT not in (select PORT from WORK._DIFF24A6W2Q where _type_ = "DIF");
MPRINT(EM_DIAGRAM):   data WORK.DELTAELEM257IC67;
MPRINT(EM_DIAGRAM):   set WORK.DELTAELEM257IC67;
MPRINT(EM_DIAGRAM):   drop _obs_ _type_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.DELTDELEM257IC67;
MPRINT(EM_DIAGRAM):   set WORK.DELTDELEM257IC67;
MPRINT(EM_DIAGRAM):   drop _obs_ _type_;
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 9 observations read from the data set WORK.MDLCOMP_FILTERSET.
NOTE: The data set EMWS1.MDLCOMP_IMPORTSET has 9 observations and 14 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE KEY='MODEL';
NOTE: The data set WORK.EMINFO42XKKJT1 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE3_EMINFO.
      WHERE (TARGET='audience_score_positive') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO41BS7X85 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE KEY='MODEL';
NOTE: The data set WORK.EMINFO403D_ZOE has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE (TARGET='audience_score_positive') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO40UKQUPU has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL numElements >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
17892      data EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_VariableSet;
17893      length USE $1 NAME $32 ROLE $32 LEVEL $10 EVENT $32 LABEL $200;
MPRINT(EM_DIAGRAM):   length USE $1 NAME $32 ROLE $32 LEVEL $10 EVENT $32 LABEL $200;
17894      NAME = "audience_score_positive";
MPRINT(EM_DIAGRAM):   NAME = "audience_score_positive";
17895      ROLE="TARGET";
MPRINT(EM_DIAGRAM):   ROLE="TARGET";
17896      LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   LEVEL = 'BINARY';
17897      EVENT = 'TRUE';
MPRINT(EM_DIAGRAM):   EVENT = 'TRUE';
17898      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
17899      output;
MPRINT(EM_DIAGRAM):   output;
17900      NAME = "audience_score_positive";
MPRINT(EM_DIAGRAM):   NAME = "audience_score_positive";
17901      ROLE="TARGET";
MPRINT(EM_DIAGRAM):   ROLE="TARGET";
17902      LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   LEVEL = 'BINARY';
17903      EVENT = 'TRUE';
MPRINT(EM_DIAGRAM):   EVENT = 'TRUE';
17904      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
17905      output;
MPRINT(EM_DIAGRAM):   output;
17906      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable USE is uninitialized.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

17907      proc sort data=EMWS1.MdlComp_VariableSet nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_VariableSet nodupkey NOTHREADS;
17908      by NAME LEVEL;
MPRINT(EM_DIAGRAM):   by NAME LEVEL;
17909      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

17910      data EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_VariableSet;
17911      set EMWS1.MdlComp_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_VariableSet;
17912      if NAME = "audience_score_positive" then USE="Y";
MPRINT(EM_DIAGRAM):   if NAME = "audience_score_positive" then USE="Y";
17913      else USE = "N";
MPRINT(EM_DIAGRAM):   else USE = "N";
17914      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: The data set EMWS1.MDLCOMP_VARIABLESET has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\MdlComp\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17916      %let _HPDMGRIDHOST=;
17917      %let _HPDMGRIDINSTALLLOC=;
17918      %let _HPDMGRIDDATASERVER=;
17919      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp : End update 
* datetime : 17NOV2019:22:49:35 
* 
*------------------------------------------------------------* 
17920      %let _emdsep = \;
17921      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17922      %let em_Train = Y;
17923      %let em_Report = Y;
17924      %let em_Score = Y;
17925      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17926      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17927      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17928      put '<Node Id="MdlComp" Event="Run" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Run" Pid="" Gridid=""/>';
17929      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

17930      options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
MPRINT(EM_DIAGRAM):    options sascmd="!sascmdv -nosyntaxcheck -noasynchio -noobjectserver";
17931      %let SYSCC=0;
17932      signon C3K4VBYU macvar=C3K4VBYU;
MPRINT(EM_DIAGRAM):   signon macvar=C3K4VBYU;
WARNING: TCP Access method tracing is enabled.
NOTE: Default SASCMD value being used is: "C:\Program Files\SASHome\SASFoundation\9.4\SAS.EXE" -nologo -noterminal -noxcmd -objectserver -objectserverparms "protocol=bridge dnsname=127.0.0.1 jcbp=60524" -sspi -secpackage NTLM  -xcmd.
NOTE: Remote signon to C3K4VBYU commencing (SAS Release 9.04.01M3P062415).
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITI MALAYA, Site 12600285.
NOTE: This session is executing on the X64_8HOME  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 X64_8HOME WIN 6.2.9200  Workstation

NOTE: SAS initialization used:
      real time           4.91 seconds
      cpu time            0.32 seconds
      
NOTE: Remote signon to C3K4VBYU complete.
17933      rsubmit C3K4VBYU wait=N persist=N  ;
MPRINT(EM_DIAGRAM):    rsubmit wait=N persist=N ;
The SAS System

NOTE: Background remote submit to C3K4VBYU in progress.
NOTE: Remote submit to C3K4VBYU commencing.
MPRINT(EM_DIAGRAM):   %global emexceptionstring emloopmode emloopnumber;
MPRINT(EM_DIAGRAM):   %let EMUSERID = %bquote(yinyen);
MPRINT(EM_DIAGRAM):   %let EMLDSPATH = %nrstr(D:\DataMiningProject\SASEM_Project\DataSources);
MPRINT(EM_DIAGRAM):   %let EMFLOWMODE = Y;
MPRINT(EM_DIAGRAM):   %let EMONODE = %bquote(MdlComp);
MPRINT(EM_DIAGRAM):   %let EMPATH = %nrstr(D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
MPRINT(EM_DIAGRAM):   %let EMWS = EMWS1;
MPRINT(EM_DIAGRAM):   %let EMNODECLASS = SASHELP.EMASSMT.ASSESS.CLASS;
MPRINT(EM_DIAGRAM):   %let EMSTATUSDIR = %nrstr(D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
MPRINT(EM_DIAGRAM):   %let EM_DEBUG =;
MPRINT(EM_DIAGRAM):   %let EMPROJECTCODE = %nrstr(D:\DataMiningProject\SASEM_Project\System\STARTUP.sas);
MPRINT(EM_DIAGRAM):   %let EMSERVERCODE = %nrstr();
MPRINT(EM_DIAGRAM):   %let EM_USERID = %bquote(yinyen);
MPRINT(EM_DIAGRAM):   %let EM_METAHOST =;
MPRINT(EM_DIAGRAM):   %let EM_METAPORT =;
MPRINT(EM_DIAGRAM):   %let EM_JAVAPACKAGE = %bquote();
MPRINT(EM_DIAGRAM):   %let EMPROJECTPATH = %nrstr(D:\DataMiningProject\SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJNAME = %nrstr(SASEM_Project);
MPRINT(EM_DIAGRAM):   %let EMPROJPATH = %nrstr(D:\DataMiningProject);
MPRINT(EM_DIAGRAM):   %let em_Train = Y;
MPRINT(EM_DIAGRAM):   %let em_Score = Y;
MPRINT(EM_DIAGRAM):   %let em_Report = Y;
MPRINT(EM_DIAGRAM):   %let emloopmode =;
MPRINT(EM_DIAGRAM):   %let emloopnumber =0;
MPRINT(EM_DIAGRAM):   %let emloopId =MdlComp;
MPRINT(EM_DIAGRAM):   %let emexceptionstring=;
MPRINT(EM_DIAGRAM):   options VBUFSIZE= 64M;
MPRINT(EM_DIAGRAM):   %em5run();
MPRINT(EM_DIAGRAM):   %put &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %sysrput emerror_MdlComp = &&emexceptionstring;
MPRINT(EM_DIAGRAM):   %put &&emloopmode;
MPRINT(EM_DIAGRAM):   %sysrput emloopmode_MdlComp = &&emloopmode;
MPRINT(EM_DIAGRAM):   endrsubmit;
17934      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17935      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17936      put '<Node Id="MdlComp" Event="Run" Pid=" " Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Run" Pid=" " Gridid=""/>';
17937      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.83 seconds
      cpu time            0.00 seconds
      

17938      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17939      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17940      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17941      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17942      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17943      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17944      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17945      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17946      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17947      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17948      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17949      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17950      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17951      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17952      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17953      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17954      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17955      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17956      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17957      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17958      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17959      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17960      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17961      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17962      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17963      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17964      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17965      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17966      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17967      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17968      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17969      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17970      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17972      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17973      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17974      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17975      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17976      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17977      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

traverser_runingNode_note 
17978      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17979      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17980      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17981      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

traverser_runingNode_note 
17982      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17983      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1     %global emexceptionstring emloopmode emloopnumber;
2     %let EMUSERID = %bquote(yinyen);
3     %let EMLDSPATH = %nrstr(D:\DataMiningProject\SASEM_Project\DataSources);
4     %let EMFLOWMODE = Y;
5     %let EMONODE = %bquote(MdlComp);
6     %let EMPATH = %nrstr(D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1);
7     %let EMWS = EMWS1;
8     %let EMNODECLASS = SASHELP.EMASSMT.ASSESS.CLASS;
9     %let EMSTATUSDIR = %nrstr(D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\System);
10    %let EM_DEBUG =;
11    %let EMPROJECTCODE = %nrstr(D:\DataMiningProject\SASEM_Project\System\STARTUP.sas);
12    %let EMSERVERCODE = %nrstr();
13    %let EM_USERID = %bquote(yinyen);
14    %let EM_METAHOST =;
15    %let EM_METAPORT =;
16    %let EM_JAVAPACKAGE = %bquote();
17    %let EMPROJECTPATH = %nrstr(D:\DataMiningProject\SASEM_Project);
18    %let EMPROJNAME = %nrstr(SASEM_Project);
19    %let EMPROJPATH = %nrstr(D:\DataMiningProject);
20    %let em_Train = Y;
21    %let em_Score = Y;
22    %let em_Report = Y;
23    %let emloopmode =;
24    %let emloopnumber =0;
25    %let emloopId =MdlComp;
26    %let emexceptionstring=;
27    options VBUFSIZE= 64M;
28    %em5run();

*------------------------------------------------------------* 
* 
* MdlComp : Running 
* datetime : 17NOV2019:22:49:41 
* 
*------------------------------------------------------------* 
6005   %let SYSCC =0;
6006   %let EMGROUPMODE =;
6007   %let EMGROUPID =;
12434  data work.MdlComp;
12435  set EMWS1.em_nodeid;
12436  where
12437  (NODEID="Tree3" and LABEL ne 'Decision Tree (Auto)')
12438  OR (NODEID="Tree" and LABEL ne 'Decision Tree (Manual)')
12439  ;
12440  run;

NOTE: There were 0 observations read from the data set EMWS1.EM_NODEID.
      WHERE ((NODEID='Tree3') and (LABEL not = 'Decision Tree (Auto)')) or ((NODEID='Tree') 
      and (LABEL not = 'Decision Tree (Manual)'));
NOTE: The data set WORK.MDLCOMP has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

12967  data EMWS1.MdlComp_EMTRAINVARIABLE;
12968  length NAME $64;
12969  set EMWS1.MdlComp_VariableSet;
12970  label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, NOQUOTE))" ROLE =
12970! "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
12970! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
12971     "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
12971! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
12972  label USE = "%sysfunc(sasmsg(sashelp.dmine, META_USE_VLABEL, NOQUOTE))";
12973  run;

NOTE: Variable ORDER is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: The data set EMWS1.MDLCOMP_EMTRAINVARIABLE has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

12974  %let emexceptionstring =;
*------------------------------------------------------------* 
* 
* MdlComp : End run 
* datetime : 17NOV2019:22:49:54 
* 
*------------------------------------------------------------* 
NOTE: The PROCEDURE DISPLAY printed pages 1-4.
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           12.69 seconds
      cpu time            7.04 seconds
      

12977   %put &&emexceptionstring;
 
12978   %sysrput emerror_MdlComp = &&emexceptionstring;
12979   %put &&emloopmode;
 
12980   %sysrput emloopmode_MdlComp = &&emloopmode;
NOTE: Remote submit to C3K4VBYU complete.
NOTE: Remote signoff from C3K4VBYU commencing.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           17.77 seconds
      cpu time            7.39 seconds
      
traverser_runingNode_note 
17984      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17985      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "MdlComp" ran. 
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\DataMiningProject\SASEM_Project\Workspaces\EMWS1\MdlComp\TRAINPROPERTIES.xml' encoding="UTF-8" NOBOM;
Node "MdlComp" succeeded. 
17987      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17988      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17989      put '<Node Id="MdlComp" Event="Complete" Pid="7504" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Complete" Pid="7504" Gridid=""/>';
17990      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=LAPTOP-8U87H5I4,
      Local Host IP addr=fe80::b4de:be5f:43bf:1c36%17,
      Peer Hostname Name=LAPTOP-8U87H5I4,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=60523,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.84 seconds
      cpu time            0.00 seconds
      

Traverser: Run Completed 
NOTE: There are no active tasks/transactions.
17991      waitfor _all_ C3K4VBYU;
MPRINT(EM_DIAGRAM):    waitfor _all_ C3K4VBYU;
17992      signoff C3K4VBYU;
MPRINT(EM_DIAGRAM):   signoff;
NOTE: A link to C3K4VBYU does not exist.  SIGNOFF is not necessary.
17993      proc printto;
MPRINT(EM_DIAGRAM):   proc printto;
17994      run;
MPRINT(EM_DIAGRAM):   run;

