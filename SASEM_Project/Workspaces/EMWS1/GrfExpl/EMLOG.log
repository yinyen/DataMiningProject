*------------------------------------------------------------*
User:                yinyen
Date:                November 17, 2019
Time:                14:35:48
Site:                12600285
Platform:            X64_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                November 17, 2019
Time:                14:35:45
*------------------------------------------------------------*
14715  proc freq data=EMWS1.GrfExpl_VariableSet noprint;
14716  table ROLE*LEVEL/out=WORK.GrfExplMETA;
14717  run;
 
NOTE: There were 45 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
NOTE: The data set WORK.GRFEXPLMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
 
 
14718  proc print data=WORK.GrfExplMETA label noobs;
14719  var ROLE LEVEL COUNT;
14720  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14721  title9 ' ';
14722  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14723  run;
 
NOTE: There were 7 observations read from the data set WORK.GRFEXPLMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
14724  title10;
 
14725  %let EMEXCEPTIONSTRING=;
15066  *------------------------------------------------------------*;
15067  * GrfExpl: Generation of macros and macro variables;
15068  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15069  *------------------------------------------------------------*;
 
15070  %let EMEXCEPTIONSTRING=;
15071  *------------------------------------------------------------*;
15072  * TRAIN: GrfExpl;
15073  *------------------------------------------------------------*;
15074  %let EM_ACTION = TRAIN;
15075  %let syscc = 0;
15076  %macro main;
15077     filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
15078     %include temp;
15079     filename temp;
15080
15081     %SetProperties;
15082
15083     %if %upcase(&EM_ACTION) = CREATE %then %do;
15084
15085         filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
15086         %include temp;
15087         filename temp;
15088         %create;
15089     %end;
15090     %else
15091     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15092
15093         filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
15094         %include temp;
15095         filename temp;
15096         %train;
15097
15098     %end;
15099     %else
15100     %if %upcase(&EM_ACTION) = REPORT %then %do;
15101
15102         filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
15103         %include temp;
15104         filename temp;
15105
15106         %report;
15107     %end;
15108
15109  %mend main;
15110
15111  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
15112 +%macro SetProperties;
15113 +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
15114 +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
15115 +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
15116 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
15117 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
15118 +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
15119 +
15120 +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_TRAIN.SOURCE.
15121 +%macro train;
15122 +
15123 +    %let graphData = &em_import_data;
15124 +    %if "&graphData" eq "" %then
15125 +        %let graphData = &em_import_transaction;
15126 +    %if "&graphData" eq "" %then
15127 +        %let graphData = &em_import_document;
15128 +    %if "&graphData" eq "" %then
15129 +        %let graphData = &em_import_validate;
15130 +    %if "&graphData" eq "" %then
15131 +        %let graphData = &em_import_test;
15132 +    %if "&graphData" eq "" %then
15133 +        %let graphData = &em_import_score;
15134 +
15135 +    %if "&graphData" eq "" %then %do;
15136 +        %let emexceptionString = exception.server.IMPORT.NODATA;
15137 +        %goto doendm;
15138 +    %end;
15139 +
15140 +    %em_getname(key=SAMPLE_DATA, type=DATA);
15141 +
15142 +    filename vartemp catalog 'sashelp.emutil.em_varmacro.source';
15143 +    %include vartemp;
15144 +    filename vartemp;
15145 +
15146 +    data tempVariableSet;
15147 +       set &em_data_variableset;
15148 +       where (ROLE = 'REJECTED' and USE='Y') or ROLE='FREQ' or ( ROLE ne 'REJECTED' and USE in('Y', 'D'));
15149 +       if _N_< 950 or (ROLE = 'TARGET' and USE in('Y', 'D')) or ROLE='FREQ' then output;
15150 +    run;
15151 +    %em_varMacro(name=varSample, metadata=tempVariableSet, where=, key=NAME, nummacro=numVarSample);
15152 +
15153 +
15154 +     %exploreSample(DATA=&graphData, OUTPUT=&EM_USER_SAMPLE_DATA, METADATA=&EM_DATA_VARIABLESET, VARS=%varSample,
15155 +                      METHOD=&EM_PROPERTY_EMSAMPLEMETHOD, SIZE=&EM_PROPERTY_EMSAMPLESIZE,
15156 +                      ALPHA=, PVALUE=, SEED=&EM_PROPERTY_EMRANDOMSEED);
15157 +
15158 +    %doendm:
15159 +
15160 +%mend train;
15161 +
15162 +%train;
NOTE: %INCLUDE (level 2) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
15164 +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
15166 +   filename macFile catalog 'work.emutil.macro.source';
15167 +   %let _METAOBS = 0;
15168 +   %let _maxvar = &maxvar;
15169 +   %if "&_maxvar" eq "" %then %let maxvar = -1;
15171 +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
15172 +                   or (&metadata eq ) %then %do;
15173 +       %put * No metadata data set defined;
15174 +       %goto doend;
15175 +   %end;
15177 +   data _null_;
15178 +      length _STRING_ $80;
15179 +      retain _STRING_ '' maxvar 0;
15180 +      set &metadata end=eof;
15181 +      file macFile;
15182 +      %if %nrbquote(&where) ne %then %do;
15183 +          %let whereClause = where (%nrbquote(&where));
15184 +          %unquote(&whereClause);
15185 +      %end;
15186 +      if _N_=1 then do;
15187 +         string = "%"!!"macro &name;";
15188 +         put string;
15189 +      end;
15190 +      maxvar +1;
15191 +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
15192 +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
15193 +         if eof
15194 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15195 +                or maxvar >= &maxvar
15196 +            %end;
15197 +            then do;
15198 +            put _STRING_;
15199 +            string = "%"!!"mend &name;";
15200 +            put string;
15201 +            string = strip(put(_N_, best.));
15202 +            call symput('_METAOBS', string);
15203 +            %if (&nummacro ne ) %then %do;
15204 +                put "%" "global &nummacro;";
15205 +                put "%" "let &nummacro = " string ";";
15206 +            %end;
15207 +            stop;
15208 +         end;
15209 +      end;
15210 +      else do;
15211 +         put _STRING_;
15212 +         _string_ = TRIM(&key);
15213 +         if eof
15214 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15215 +              or maxvar >= &maxvar
15216 +           %end;
15217 +            then do;
15218 +            put _STRING_;
15219 +            string = "%"!!"mend &name;";
15220 +            put string;
15221 +        end;
15222 +      end;
15223 +      if eof
15224 +         %if  %sysevalf(&_maxvar > 0) %then %do;
15225 +             or maxvar >= &maxvar
15226 +         %end;
15227 +         then do;
15228 +         string = strip(put(_N_, best.));
15229 +         call symput('_METAOBS', string);
15230 +         %if (&nummacro ne ) %then %do;
15231 +             put "%" "global &nummacro;";
15232 +             put "%" "let &nummacro = " string ";";
15233 +         %end;
15234 +         stop;
15235 +      end;
15236 +   run;
15238 +   %doend:
15239 +   %if ^&_METAOBS %then %do;
15240 +       data _null_;
15241 +          file macFile;
15242 +          put "%" "macro &name;";
15243 +          put "%" "mend &name;";
15244 +          %if (&nummacro ne ) %then %do;
15245 +              put "%" "global &nummacro;";
15246 +              put "%" "let &nummacro = 0;";
15247 +          %end;
15248 +      run;
15249 +   %end;
15250 +   %inc macFile;
15251 +   filename macFile;
15252 +%mend em_varMacro;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref VARTEMP has been deassigned.
 
NOTE: There were 42 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 42 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sun, Nov 17, 2019 02:35:47 PM,
      Last Modified=Sun, Nov 17, 2019 02:35:47 PM,
      Filename=C:\Users\yinyen\AppData\Local\Temp\SAS Temporary Files\_TD17432_LAPTOP-8U87H5I4_\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 12 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 72.
NOTE: There were 42 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 2) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
15253 +%macro varSample;
15254 +G NC17 NR PG PG_13 R _dataobs_ audience_score_positive domestic_gross
15255 +domestic_opening foreign_gross genre_Action genre_Adventure
15256 +genre_AnimationManga genre_ArthouseInter genre_ClassicsCult genre_Comedy
15257 +genre_DramaTele genre_FamilyKids genre_Fantasy genre_FitnessSports
15258 +genre_HistDocument genre_Horror genre_MusicalPerfarts genre_Romance
15259 +genre_Sci_fi genre_Special_Interest genre_ThrillMysSusp genre_Western
15260 +markets markets_missing runtime ss_count ss_mean ss_median ss_p25 ss_p75
15261 +ss_std title tomatometer_count total_gross user_rating_count
15262 +%mend varSample;
15263 +%global numVarSample;
15264 +%let numVarSample = 42 ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref MACFILE has been deassigned.
NOTE: %INCLUDE (level 2) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
15265 +/*------------------------------------------------------------------
15266 +  MACRO EXPLOREOBS
15267 +
15268 +  SUPPORT:  SASDHD - David Duling
15269 +  PRODUCT:  Enterprise Miner
15270 +
15271 +  DESCRIPTION:
15272 +  Generates maximum and default numbers of observations to
15273 +  download for visualization depending on the record length.
15274 +
15275 +  Values were determined by trial and error using typical
15276 +  Windows workstation configurations.
15277 +
15278 +  Discrete sets of values are returned so that user experience
15279 +  will be consitent with similar sized data sets.
15280 +
15281 +  These macro variables are set:
15282 +  _exploreobs_max -- maximum number of obs downloadable
15283 +  _exploreobs_def -- default number of obs to be downloaded
15284 +  _exploreobs_recl - record length.  Might be useful for reporting.
15285 +
15286 +  Use the _exploreobs_max to set limit the GUI selection of
15287 +  observations for downloading.  The GUI selection for obs
15288 +  could be reduced to "Default" and "Max".
15289 +
15290 +  Parameters
15291 +  data=   libname.memname of input data
15292 +  vars=   subset list of variables.
15293 +          downloading 1 out of 500 really does work like downloading
15294 +          1 out of 1 vars.  Users may select a subset of vars for
15295 +                   visualizations.  Pass in the list as space delimited
15296 +          var names.  If vars is not specified, the record length
15297 +          of the entire data will be used.
15298 +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
15299 +
15300 +  Control
15301 +  Users may control the values by entering these macro variables.
15302 +            EM_EXPLOREOBS_MAX
15303 +            EM_EXPLOREOBS_DEFAULT
15304 +  These values override the computed values.
15305 +
15306 +  Debugging
15307 +  %let _exploreobs_debug=1 ;
15308 +--------------------------------------------------------------------
15309 +  HISTORY: 20APR2004. sasdhd. pushed.
15310 +           18DEC2004. sasdhd. S0280556.
15311 +           07SEP2007. sasdhd. HK1009586
15312 +--------------------------------------------------------------------*/
15313 +
15314 +%macro exploreobs(data=,vars=, nbytes=) ;
15315 +
15316 +   /*--- variable definitions ---*/
15317 +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
15318 +   %local xobs xvars xlen vlen xi vname vlist ;
15319 +   %local _exp_source _exp_notes ;
15320 +
15321 +   /*--- USER definitions ---*/
15322 +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
15323 +
15324 +   /*--- variable intializations ---*/
15325 +   %let _exploreobs_max=0 ;
15326 +   %let _exploreobs_def=0 ;
15327 +   %let _exploreobs_recl=0 ;
15328 +   %let xvars= 0 ;
15329 +   %let xlen = 0 ;
15330 +   %let xobs = 0 ;
15331 +
15332 +   /*--- data error checks ---*/
15333 +   %if "&data" eq "" %then %do ;
15334 +            %put NOTE: DATA is not specified. ;
15335 +            %goto term ;
15336 +      %end ;
15337 +
15338 +   %let dsid=%sysfunc(open(&data)) ;
15339 +   %if not &dsid %then %do ;
15340 +            %put NOTE: DATA &data is not available. ;
15341 +            %goto term ;
15342 +      %end ;
15343 +
15344 +   /*--- if a vars list exists generate a subset ---*/
15345 +   %if &vars ne %then %do ;
15346 +         %let dsid=%sysfunc(close(&dsid)) ;
15347 +         %if &_exploreobs_debug ne 1 %then %do ;
15348 +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
15349 +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
15350 +                  options nosource nonotes ;
15351 +         %end ;
15352 +         data _exploreobs_temp_data ;
15353 +         set &data(obs=0) ;
15354 +          keep &vars ;
15355 +         run;
15356 +         %if &_exploreobs_debug ne 1 %then %do ;
15357 +                  options &_exp_source &_exp_notes ;
15358 +         %end ;
15359 +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
15360 +         %if &dsid eq 0 %then %do ;
15361 +                  %put NOTE: Sample is not available.;
15362 +                  %goto term ;
15363 +            %end ;
15364 +      %end ;
15365 +
15366 +   /*--- get var attributes ---*/
15367 +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
15368 +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
15369 +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
15370 +   %let dsid= %sysfunc(close(&dsid)) ;
15371 +
15372 +   /*--- set default and max obs ---*/
15373 +   %let _exploreobs_recl=%eval(&xlen) ;
15374 +   %if &_exploreobs_recl eq 0 %then %do ;
15375 +             %let _exploreobs_max= 0 ;
15376 +             %let _exploreobs_def= 0 ;
15377 +             %goto term ;
15378 +
15379 +   %end ;
15380 +   %else
15381 +   %if &_exploreobs_recl le 32 %then %do ;
15382 +             %let _exploreobs_max=100000 ;
15383 +             %let _exploreobs_def= 10000 ;
15384 +   %end ;
15385 +   %else
15386 +   %if &_exploreobs_recl le 128 %then %do ;
15387 +             %let _exploreobs_max=60000 ;
15388 +             %let _exploreobs_def= 6000 ;
15389 +   %end ;
15390 +   %else
15391 +   %if &_exploreobs_recl lt 1000 %then %do ;
15392 +             %let _exploreobs_max=20000 ;
15393 +             %let _exploreobs_def= 2000 ;
15394 +   %end ;
15395 +   %else
15396 +   %if &_exploreobs_recl lt 5000 %then %do ;
15397 +             %let _exploreobs_max= 10000 ;
15398 +             %let _exploreobs_def=  1000 ;
15399 +   %end ;
15400 +   %else
15401 +   %if &_exploreobs_recl lt 20000 %then %do ;
15402 +             %let _exploreobs_max= 5000 ;
15403 +             %let _exploreobs_def=  500 ;
15404 +   %end ;
15405 +   %else %do ;
15406 +             %let _exploreobs_max= 1000 ;
15407 +             %let _exploreobs_def=  200 ;
15408 +   %end ;
15409 +
15410 +   /*--- Users options ---*/
15411 +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
15412 +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
15413 +   %end;
15414 +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15415 +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
15416 +   %end;
15417 +
15418 +    /*--- S0868273 ---*/
15419 +    %if "&NBYTES" ne "" %then %do;
15420 +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
15421 +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
15422 +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
15423 +       %end;
15424 +
15425 +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15426 +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
15427 +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
15428 +          %if ^&_exploreobs_def %then
15429 +              %let _exploreobs_def = 1;
15430 +
15431 +       %end;
15432 +    %end;
15433 +
15434 +   /*--- Terminate ---*/
15435 +   %term:
15436 +
15437 +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
15438 +%mend ;
15439 +
15440 +
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Part_TRAIN : vars= 42 : recl= 552 : max=20000 : def= 2000
PERFORMANCE  DETAILS
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
 
NOTE: There were 2000 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set EMWS1.GRFEXPL_SAMPLE_DATA has 2000 observations and 42 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
15442 +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
15444 +   filename macFile catalog 'work.emutil.macro.source';
15445 +   %let _METAOBS = 0;
15446 +   %let _maxvar = &maxvar;
15447 +   %if "&_maxvar" eq "" %then %let maxvar = -1;
15449 +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
15450 +                   or (&metadata eq ) %then %do;
15451 +       %put * No metadata data set defined;
15452 +       %goto doend;
15453 +   %end;
15455 +   data _null_;
15456 +      length _STRING_ $80;
15457 +      retain _STRING_ '' maxvar 0;
15458 +      set &metadata end=eof;
15459 +      file macFile;
15460 +      %if %nrbquote(&where) ne %then %do;
15461 +          %let whereClause = where (%nrbquote(&where));
15462 +          %unquote(&whereClause);
15463 +      %end;
15464 +      if _N_=1 then do;
15465 +         string = "%"!!"macro &name;";
15466 +         put string;
15467 +      end;
15468 +      maxvar +1;
15469 +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
15470 +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
15471 +         if eof
15472 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15473 +                or maxvar >= &maxvar
15474 +            %end;
15475 +            then do;
15476 +            put _STRING_;
15477 +            string = "%"!!"mend &name;";
15478 +            put string;
15479 +            string = strip(put(_N_, best.));
15480 +            call symput('_METAOBS', string);
15481 +            %if (&nummacro ne ) %then %do;
15482 +                put "%" "global &nummacro;";
15483 +                put "%" "let &nummacro = " string ";";
15484 +            %end;
15485 +            stop;
15486 +         end;
15487 +      end;
15488 +      else do;
15489 +         put _STRING_;
15490 +         _string_ = TRIM(&key);
15491 +         if eof
15492 +            %if  %sysevalf(&_maxvar > 0) %then %do;
15493 +              or maxvar >= &maxvar
15494 +           %end;
15495 +            then do;
15496 +            put _STRING_;
15497 +            string = "%"!!"mend &name;";
15498 +            put string;
15499 +        end;
15500 +      end;
15501 +      if eof
15502 +         %if  %sysevalf(&_maxvar > 0) %then %do;
15503 +             or maxvar >= &maxvar
15504 +         %end;
15505 +         then do;
15506 +         string = strip(put(_N_, best.));
15507 +         call symput('_METAOBS', string);
15508 +         %if (&nummacro ne ) %then %do;
15509 +             put "%" "global &nummacro;";
15510 +             put "%" "let &nummacro = " string ";";
15511 +         %end;
15512 +         stop;
15513 +      end;
15514 +   run;
15516 +   %doend:
15517 +   %if ^&_METAOBS %then %do;
15518 +       data _null_;
15519 +          file macFile;
15520 +          put "%" "macro &name;";
15521 +          put "%" "mend &name;";
15522 +          %if (&nummacro ne ) %then %do;
15523 +              put "%" "global &nummacro;";
15524 +              put "%" "let &nummacro = 0;";
15525 +          %end;
15526 +      run;
15527 +   %end;
15528 +   %inc macFile;
15529 +   filename macFile;
15530 +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref VARTEMP has been deassigned.
 
NOTE: There were 42 observations read from the data set EMWS1.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 42 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, Nov 17, 2019 02:35:47 PM,
      Last Modified=Sun, Nov 17, 2019 02:35:47 PM,
      Filename=C:\Users\yinyen\AppData\Local\Temp\SAS Temporary Files\_TD17432_LAPTOP-8U87H5I4_\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 12 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 72.
NOTE: There were 42 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
15531 +%macro varSample;
15532 +G NC17 NR PG PG_13 R _dataobs_ audience_score_positive domestic_gross
15533 +domestic_opening foreign_gross genre_Action genre_Adventure
15534 +genre_AnimationManga genre_ArthouseInter genre_ClassicsCult genre_Comedy
15535 +genre_DramaTele genre_FamilyKids genre_Fantasy genre_FitnessSports
15536 +genre_HistDocument genre_Horror genre_MusicalPerfarts genre_Romance
15537 +genre_Sci_fi genre_Special_Interest genre_ThrillMysSusp genre_Western
15538 +markets markets_missing runtime ss_count ss_mean ss_median ss_p25 ss_p75
15539 +ss_std title tomatometer_count total_gross user_rating_count
15540 +%mend varSample;
15541 +%global numVarSample;
15542 +%let numVarSample = 42 ;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref MACFILE has been deassigned.
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
15543 +/*------------------------------------------------------------------
15544 +  MACRO EXPLOREOBS
15545 +
15546 +  SUPPORT:  SASDHD - David Duling
15547 +  PRODUCT:  Enterprise Miner
15548 +
15549 +  DESCRIPTION:
15550 +  Generates maximum and default numbers of observations to
15551 +  download for visualization depending on the record length.
15552 +
15553 +  Values were determined by trial and error using typical
15554 +  Windows workstation configurations.
15555 +
15556 +  Discrete sets of values are returned so that user experience
15557 +  will be consitent with similar sized data sets.
15558 +
15559 +  These macro variables are set:
15560 +  _exploreobs_max -- maximum number of obs downloadable
15561 +  _exploreobs_def -- default number of obs to be downloaded
15562 +  _exploreobs_recl - record length.  Might be useful for reporting.
15563 +
15564 +  Use the _exploreobs_max to set limit the GUI selection of
15565 +  observations for downloading.  The GUI selection for obs
15566 +  could be reduced to "Default" and "Max".
15567 +
15568 +  Parameters
15569 +  data=   libname.memname of input data
15570 +  vars=   subset list of variables.
15571 +          downloading 1 out of 500 really does work like downloading
15572 +          1 out of 1 vars.  Users may select a subset of vars for
15573 +                   visualizations.  Pass in the list as space delimited
15574 +          var names.  If vars is not specified, the record length
15575 +          of the entire data will be used.
15576 +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
15577 +
15578 +  Control
15579 +  Users may control the values by entering these macro variables.
15580 +            EM_EXPLOREOBS_MAX
15581 +            EM_EXPLOREOBS_DEFAULT
15582 +  These values override the computed values.
15583 +
15584 +  Debugging
15585 +  %let _exploreobs_debug=1 ;
15586 +--------------------------------------------------------------------
15587 +  HISTORY: 20APR2004. sasdhd. pushed.
15588 +           18DEC2004. sasdhd. S0280556.
15589 +           07SEP2007. sasdhd. HK1009586
15590 +--------------------------------------------------------------------*/
15591 +
15592 +%macro exploreobs(data=,vars=, nbytes=) ;
15593 +
15594 +   /*--- variable definitions ---*/
15595 +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
15596 +   %local xobs xvars xlen vlen xi vname vlist ;
15597 +   %local _exp_source _exp_notes ;
15598 +
15599 +   /*--- USER definitions ---*/
15600 +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
15601 +
15602 +   /*--- variable intializations ---*/
15603 +   %let _exploreobs_max=0 ;
15604 +   %let _exploreobs_def=0 ;
15605 +   %let _exploreobs_recl=0 ;
15606 +   %let xvars= 0 ;
15607 +   %let xlen = 0 ;
15608 +   %let xobs = 0 ;
15609 +
15610 +   /*--- data error checks ---*/
15611 +   %if "&data" eq "" %then %do ;
15612 +            %put NOTE: DATA is not specified. ;
15613 +            %goto term ;
15614 +      %end ;
15615 +
15616 +   %let dsid=%sysfunc(open(&data)) ;
15617 +   %if not &dsid %then %do ;
15618 +            %put NOTE: DATA &data is not available. ;
15619 +            %goto term ;
15620 +      %end ;
15621 +
15622 +   /*--- if a vars list exists generate a subset ---*/
15623 +   %if &vars ne %then %do ;
15624 +         %let dsid=%sysfunc(close(&dsid)) ;
15625 +         %if &_exploreobs_debug ne 1 %then %do ;
15626 +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
15627 +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
15628 +                  options nosource nonotes ;
15629 +         %end ;
15630 +         data _exploreobs_temp_data ;
15631 +         set &data(obs=0) ;
15632 +          keep &vars ;
15633 +         run;
15634 +         %if &_exploreobs_debug ne 1 %then %do ;
15635 +                  options &_exp_source &_exp_notes ;
15636 +         %end ;
15637 +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
15638 +         %if &dsid eq 0 %then %do ;
15639 +                  %put NOTE: Sample is not available.;
15640 +                  %goto term ;
15641 +            %end ;
15642 +      %end ;
15643 +
15644 +   /*--- get var attributes ---*/
15645 +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
15646 +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
15647 +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
15648 +   %let dsid= %sysfunc(close(&dsid)) ;
15649 +
15650 +   /*--- set default and max obs ---*/
15651 +   %let _exploreobs_recl=%eval(&xlen) ;
15652 +   %if &_exploreobs_recl eq 0 %then %do ;
15653 +             %let _exploreobs_max= 0 ;
15654 +             %let _exploreobs_def= 0 ;
15655 +             %goto term ;
15656 +
15657 +   %end ;
15658 +   %else
15659 +   %if &_exploreobs_recl le 32 %then %do ;
15660 +             %let _exploreobs_max=100000 ;
15661 +             %let _exploreobs_def= 10000 ;
15662 +   %end ;
15663 +   %else
15664 +   %if &_exploreobs_recl le 128 %then %do ;
15665 +             %let _exploreobs_max=60000 ;
15666 +             %let _exploreobs_def= 6000 ;
15667 +   %end ;
15668 +   %else
15669 +   %if &_exploreobs_recl lt 1000 %then %do ;
15670 +             %let _exploreobs_max=20000 ;
15671 +             %let _exploreobs_def= 2000 ;
15672 +   %end ;
15673 +   %else
15674 +   %if &_exploreobs_recl lt 5000 %then %do ;
15675 +             %let _exploreobs_max= 10000 ;
15676 +             %let _exploreobs_def=  1000 ;
15677 +   %end ;
15678 +   %else
15679 +   %if &_exploreobs_recl lt 20000 %then %do ;
15680 +             %let _exploreobs_max= 5000 ;
15681 +             %let _exploreobs_def=  500 ;
15682 +   %end ;
15683 +   %else %do ;
15684 +             %let _exploreobs_max= 1000 ;
15685 +             %let _exploreobs_def=  200 ;
15686 +   %end ;
15687 +
15688 +   /*--- Users options ---*/
15689 +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
15690 +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
15691 +   %end;
15692 +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15693 +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
15694 +   %end;
15695 +
15696 +    /*--- S0868273 ---*/
15697 +    %if "&NBYTES" ne "" %then %do;
15698 +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
15699 +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
15700 +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
15701 +       %end;
15702 +
15703 +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
15704 +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
15705 +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
15706 +          %if ^&_exploreobs_def %then
15707 +              %let _exploreobs_def = 1;
15708 +
15709 +       %end;
15710 +    %end;
15711 +
15712 +   /*--- Terminate ---*/
15713 +   %term:
15714 +
15715 +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
15716 +%mend ;
15717 +
15718 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Part_TRAIN : vars= 42 : recl= 552 : max=20000 : def= 2000
PERFORMANCE  DETAILS
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
 
NOTE: There were 2000 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set EMWS1.GRFEXPL_SAMPLE_DATA has 2000 observations and 42 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
15719  *------------------------------------------------------------*;
15720  * End TRAIN: GrfExpl;
15721  *------------------------------------------------------------*;
15722
 
15723  *------------------------------------------------------------*;
15724  * Close any missing semi colons;
15725  *------------------------------------------------------------*;
15726  ;
15727  ;
15728  ;
15729  ;
15730  quit;
15731  *------------------------------------------------------------*;
15732  * Close any unbalanced quotes;
15733  *------------------------------------------------------------*;
15734  /*; *"; *'; */
15735  ;
15736  run;
15737  quit;
15738  /* Reset EM Options */
15739  options formchar="|----|+|---+=|-/\<>*";
15740  options nocenter ls=256 ps=10000;
15741  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                November 17, 2019
Time:                14:35:47
*------------------------------------------------------------*
15843  %let EMEXCEPTIONSTRING=;
15844  *------------------------------------------------------------*;
15845  * SCORE: GrfExpl;
15846  *------------------------------------------------------------*;
15847  %let EM_ACTION = SCORE;
15848  %let syscc = 0;
15849  %macro main;
15850     filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
15851     %include temp;
15852     filename temp;
15853
15854     %SetProperties;
15855
15856     %if %upcase(&EM_ACTION) = CREATE %then %do;
15857
15858         filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
15859         %include temp;
15860         filename temp;
15861         %create;
15862     %end;
15863     %else
15864     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15865
15866         filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
15867         %include temp;
15868         filename temp;
15869         %train;
15870
15871     %end;
15872     %else
15873     %if %upcase(&EM_ACTION) = REPORT %then %do;
15874
15875         filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
15876         %include temp;
15877         filename temp;
15878
15879         %report;
15880     %end;
15881
15882  %mend main;
15883
15884  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
15885 +%macro SetProperties;
15886 +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
15887 +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
15888 +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
15889 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
15890 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
15891 +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
15892 +
15893 +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
15894  *------------------------------------------------------------*;
15895  * End SCORE: GrfExpl;
15896  *------------------------------------------------------------*;
15897
 
15898  *------------------------------------------------------------*;
15899  * GrfExpl: Scoring DATA data;
15900  *------------------------------------------------------------*;
15901  data EMWS1.GrfExpl_TRAIN
15902  / view=EMWS1.GrfExpl_TRAIN
15903  ;
15904  set EMWS1.Part_TRAIN
15905  ;
15906  run;
 
NOTE: DATA STEP view saved on file EMWS1.GRFEXPL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
15907  quit;
 
15908  *------------------------------------------------------------*;
15909  * GrfExpl: Scoring VALIDATE data;
15910  *------------------------------------------------------------*;
15911  data EMWS1.GrfExpl_VALIDATE
15912  / view=EMWS1.GrfExpl_VALIDATE
15913  ;
15914  set EMWS1.Part_VALIDATE
15915  ;
15916  run;
 
NOTE: DATA STEP view saved on file EMWS1.GRFEXPL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
15917  quit;
 
15919  *------------------------------------------------------------*;
15920  * GrfExpl: Computing metadata for TRAIN data;
15921  *------------------------------------------------------------*;
 
NOTE: View EMWS1.GRFEXPL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS1.GRFEXPL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS1.GRFEXPL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                November 17, 2019
Time:                14:35:48
*------------------------------------------------------------*
16282  %let EMEXCEPTIONSTRING=;
16283  *------------------------------------------------------------*;
16284  * REPORT: GrfExpl;
16285  *------------------------------------------------------------*;
16286  %let EM_ACTION = REPORT;
16287  %let syscc = 0;
16288  %macro main;
16289     filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
16290     %include temp;
16291     filename temp;
16292
16293     %SetProperties;
16294
16295     %if %upcase(&EM_ACTION) = CREATE %then %do;
16296
16297         filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
16298         %include temp;
16299         filename temp;
16300         %create;
16301     %end;
16302     %else
16303     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16304
16305         filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
16306         %include temp;
16307         filename temp;
16308         %train;
16309
16310     %end;
16311     %else
16312     %if %upcase(&EM_ACTION) = REPORT %then %do;
16313
16314         filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
16315         %include temp;
16316         filename temp;
16317
16318         %report;
16319     %end;
16320
16321  %mend main;
16322
16323  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
16324 +%macro SetProperties;
16325 +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
16326 +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
16327 +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
16328 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
16329 +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
16330 +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
16331 +
16332 +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_REPORT.SOURCE.
16333 +%macro report;
16334 +
16335 +   %let sourceKey = em_import_data;
16336 +    %if "&sourceKey" eq "" %then
16337 +        %let sourceKey = em_import_transaction;
16338 +    %if "&sourceKey" eq "" %then
16339 +        %let sourceKey = em_import_document;
16340 +    %if "&sourceKey" eq "" %then
16341 +        %let sourceKey = em_import_validate;
16342 +    %if "&sourceKey" eq "" %then
16343 +        %let sourceKey = em_import_test;
16344 +    %if "&sourceKey" eq "" %then
16345 +        %let sourceKey = em_import_score;
16346 +
16347 +   %if "&EM_PROPERTY_DATASOURCE" = "SAMPLE" %then
16348 +      %let sourceKey =SAMPLE_DATA;
16349 +
16350 +    %em_report(Key=&sourceKey, viewType=DATA, Block=Data, Description=Sample, Autodisplay=Y, localize=Y );
16351 +
16352 +   %if &EM_NUM_TARGET %then %do;
16353 +       %if &EM_NUM_INTERVAL_TARGET %then %do;
16354 +           %do i=1 %to &EM_NUM_INTERVAL_TARGET;
16355 +               %let targetName = %scan(%EM_INTERVAL_TARGET, &i);
16356 +               %if "&EM_PROPERTY_TARGET" = "Y" %then %do;
16357 +                   %em_report(Key=&sourceKey, viewType=HISTOGRAM, X=&targetName, freq=%EM_FREQ, block=Target, AutoDisplay=Y, Description=&targetName);
16358 +               %end;
16359 +
16360 +               %if "&EM_PROPERTY_GROUPBYTARGET" = "Y" and &EM_NUM_SEGMENT %then %do;
16361 +                   %do j=1 %to &EM_NUM_SEGMENT;
16362 +                       %let groupName = %scan(%em_segment, &j);
16363 +                       %em_report(Key=&sourceKey, viewType=BASEBOX, Y=&targetName, X=&groupname, freq=%EM_FREQ, Block=GroupPlots, Description=%nrbquote(&targetName x &groupName));
16364 +                   %end;
16365 +               %end;
16366 +           %end;
16367 +       %end;
16368 +
16369 +       %let numClassTarget = %eval(&EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET + &EM_NUM_ORDINAL_TARGET );
16370 +       %if &numClassTarget %then %do;
16371 +           %do i=1 %to &numClassTarget;
16372 +               %let targetName = %scan(%EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET, &i);
16373 +               %if "&EM_PROPERTY_TARGET" = "Y" %then %do;
16374 +                   %em_report(Key=&sourceKey, viewType=BAR, X=&targetName, freq=%EM_FREQ, block=Target, AutoDisplay=Y, Description=&targetName);
16375 +               %end;
16376 +
16377 +               %if "&EM_PROPERTY_GROUPBYTARGET" = "Y" and &EM_NUM_SEGMENT %then %do;
16378 +                   %do j=1 %to &EM_NUM_SEGMENT;
16379 +                       %let groupName = %scan(%em_segment, &j);
16380 +                       %em_report(Key=&sourceKey, viewType=BAR, X=&groupName, group=&targetname, freq=%EM_FREQ, Block=GroupPlots, Description=%nrbquote(&targetName x &groupName));
16381 +                   %end;
16382 +               %end;
16383 +
16384 +           %end;
16385 +       %end;
16386 +
16387 +   %end;
16388 +
16389 +%mend report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
16390  *------------------------------------------------------------*;
16391  * End REPORT: GrfExpl;
16392  *------------------------------------------------------------*;
16393
 
16394  /* Reset EM Options */
16395  options formchar="|----|+|---+=|-/\<>*";
16396  options nocenter ls=256 ps=10000;
16397  goptions reset=all device=GIF NODISPLAY;
 
16398  proc sort data=WORK.EM_USER_REPORT;
16399  by ID VIEW;
16400  run;
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
